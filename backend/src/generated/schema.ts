/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/v1/auth/me": {
    get: operations["GetUser"];
  };
  "/api/v1/auth/login": {
    post: operations["Login"];
  };
  "/api/v1/auth/change_password": {
    post: operations["ChangePassword"];
  };
  "/api/v1/auth/refresh_token": {
    post: operations["PostRefreshToken"];
  };
  "/api/v1/auth/logout": {
    get: operations["Logout"];
  };
  "/api/v1/users/permissions/{id}": {
    get: operations["GetPermissionDetail"];
    put: operations["UpdatePermission"];
    delete: operations["DeletePermission"];
  };
  "/api/v1/users/permissions": {
    get: operations["GetPermissionList"];
    post: operations["CreatePermission"];
  };
  "/api/v1/users/roles/{id}": {
    get: operations["GetRoleDetail"];
    put: operations["UpdateRole"];
    delete: operations["DeleteRole"];
  };
  "/api/v1/users/roles": {
    get: operations["GetRoleList"];
    post: operations["CreateRole"];
  };
  "/api/v1/users/{id}": {
    get: operations["GetUserDetail"];
    put: operations["UpdateUser"];
    delete: operations["DeleteUser"];
  };
  "/api/v1/users": {
    get: operations["GetUserList"];
    /** Hola mundo */
    post: operations["CreateUser"];
  };
}

export interface components {
  schemas: {
    /** Model Permission */
    Permission: {
      createdAt: string;
      updatedAt: string;
      isActive: boolean;
      description: string | null;
      code: string;
      permissionId: number;
    };
    UpdatePermissionDto: {
      isActive?: boolean;
      description?: string;
    };
    CreatePermissionDto: {
      description: string;
      code: string;
    };
    /** Model Role */
    Role: {
      createdAt: string;
      updatedAt: string;
      isActive: boolean;
      description: string;
      code: string;
      roleId: number;
    };
    UpdateRoleDto: {
      permissions?: {
        code: string;
      }[];
      isActive?: boolean;
      description?: string;
    };
    CreateRoleDto: {
      permissions?: {
        code: string;
      }[];
      description: string;
      code: string;
    };
    /** Model User */
    User: {
      createdAt: string;
      updatedAt: string;
      isActive: boolean;
      passwordHash: string | null;
      email: string | null;
      fullName: string;
      username: string;
      userId: number;
    };
    UpdateUserDto: {
      roles?: {
        code: string;
      }[];
      isActive?: boolean;
      phone?: string;
      address?: string;
      email?: string;
      fullName?: string;
    };
    CreateUserDto: {
      roles?: {
        code: string;
      }[];
      phone?: string;
      address?: string;
      email?: string;
      fullName: string;
      username: string;
    };
  };
  responses: {};
  parameters: {};
  requestBodies: {};
  headers: {};
}

export interface operations {
  GetUser: {
    parameters: {};
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": {
            createdAt: string;
            updatedAt: string;
            isActive: boolean;
            passwordHash: string;
            email: string;
            fullName: string;
            username: string;
            userId: number;
            roles: {
              description: string;
              code: string;
            }[];
            permissions: {
              description: string;
              code: string;
            }[];
          };
        };
      };
    };
  };
  Login: {
    parameters: {};
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": {
            refreshToken: string;
            accessToken: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          password: string;
          username: string;
        };
      };
    };
  };
  ChangePassword: {
    parameters: {};
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": number;
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          newpassword: string;
          oldpassword: string;
        };
      };
    };
  };
  PostRefreshToken: {
    parameters: {};
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": {
            accessToken: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          refreshToken: string;
        };
      };
    };
  };
  Logout: {
    parameters: {
      query: {
        refreshToken?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": string;
        };
      };
      /** Success Logout and Unauthorized */
      401: unknown;
    };
  };
  GetPermissionDetail: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": components["schemas"]["Permission"];
        };
      };
    };
  };
  UpdatePermission: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": components["schemas"]["Permission"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePermissionDto"];
      };
    };
  };
  DeletePermission: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": components["schemas"]["Permission"];
        };
      };
    };
  };
  GetPermissionList: {
    parameters: {
      query: {
        page?: number;
        perPage?: number;
        username?: string;
        isActive?: boolean;
      };
    };
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": {
            total: number;
            perPage: number;
            page: number;
            rows: components["schemas"]["Permission"][];
          };
        };
      };
    };
  };
  CreatePermission: {
    parameters: {};
    responses: {
      /** Created */
      201: {
        content: {
          "application/json": components["schemas"]["Permission"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreatePermissionDto"];
      };
    };
  };
  GetRoleDetail: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": components["schemas"]["Role"] & {
            permissions: {
              description: string;
              code: string;
            }[];
          };
        };
      };
    };
  };
  UpdateRole: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": components["schemas"]["Role"] & {
            permissions: {
              description: string;
              code: string;
            }[];
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateRoleDto"];
      };
    };
  };
  DeleteRole: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": components["schemas"]["Role"];
        };
      };
    };
  };
  GetRoleList: {
    parameters: {
      query: {
        page?: number;
        perPage?: number;
        isActive?: boolean;
      };
    };
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": {
            total: number;
            perPage: number;
            page: number;
            rows: (components["schemas"]["Role"] & {
              permissions: {
                code: string;
              }[];
            })[];
          };
        };
      };
    };
  };
  CreateRole: {
    parameters: {};
    responses: {
      /** Created */
      201: {
        content: {
          "application/json": components["schemas"]["Role"] & {
            permissions: {
              code: string;
            }[];
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateRoleDto"];
      };
    };
  };
  GetUserDetail: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": {
            createdAt: string;
            updatedAt: string;
            isActive: boolean;
            passwordHash: string;
            email: string;
            fullName: string;
            username: string;
            userId: number;
            roles: {
              description: string;
              code: string;
            }[];
            permissions: {
              description: string;
              code: string;
            }[];
          };
        };
      };
    };
  };
  UpdateUser: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateUserDto"];
      };
    };
  };
  DeleteUser: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** No content */
      204: never;
    };
  };
  GetUserList: {
    parameters: {
      query: {
        page?: number;
        perPage?: number;
        isActive?: boolean;
      };
    };
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": {
            total: number;
            perPage: number;
            page: number;
            rows: {
              createdAt: string;
              updatedAt: string;
              isActive: boolean;
              passwordHash: string;
              email: string;
              fullName: string;
              username: string;
              userId: number;
              roles: string[];
            }[];
          };
        };
      };
    };
  };
  /** Hola mundo */
  CreateUser: {
    parameters: {};
    responses: {
      /** Created */
      201: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateUserDto"];
      };
    };
  };
}

export interface external {}
